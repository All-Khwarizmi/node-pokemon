# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main", "Dev"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    env:
      DOCKER_USERNAME: "suarecito"
      WEBHOOK_URL: "https://webhook.site/4204e8e3-eb61-4340-8782-8c08b2cfbe21"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: test webhook
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"text":"Hello, World!", "env username": ${{ env.DOCKER_USERNAME }}, "secret username": ${{ secrets.DOCKER_USERNAME }}, "job id": ${{ github.run.id }} }' $WEBHOOK_URL

      - name: Login to Docker Hub
        uses: actions/checkout@v4
      - run: |
          echo ${{ github.run.id }}
          docker login  -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          docker build . -t ${{ secrets.DOCKER_USERNAME }}/node-course:${{ github.run.id }}
      
      - name: Tag docker image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/node-course:${{ github.run.id }} ${{ secrets.DOCKER_USERNAME }}/node-course:latest
        
      - name: Push docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/node-course:lastest
